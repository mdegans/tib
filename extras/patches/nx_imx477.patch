From 7a82a1e551d0d2e16169478dd339d2444a926b74 Mon Sep 17 00:00:00 2001
From: dchvs <daniel.chaves@ridgerun.com>
Date: Tue, 12 Jan 2021 16:55:41 -0600
Subject: [PATCH] Squashed commit of the following:

commit bb86898ffc20df380d3f2898bef42d8cbc88fb2f
Merge: ee7ad1f2a 1c605fbfd
Author: Daniel Chaves <75323587+dchvs@users.noreply.github.com>
Date:   Tue Jan 12 15:36:43 2021 -0600

    Merge pull request #19 from RidgeRun/4.4.1/nx/imx477-dev

    Add RPI V3 IMX477 NX driver

commit 1c605fbfdf950a0d0042b0851c6e8659692572a3
Author: Carlos Rodriguez <carlos.rodriguez@ridgerun.com>
Date:   Fri Jun 26 16:29:07 2020 -0600

    Add RPI V3 IMX477 NX driver

    Add Analog Gain Control

    Add Framerate Control

    Add Exposure Control

    Add Group Hold Control

    Add 4056x3040@15 mode

    Add 4032x3040@30fps mode

    Add 1920x1440@60fps mode

    Add 2028x1520@60fps mode
---
 .../tegra194-camera-jakku-rbpcv3-imx477.dtsi  |  59 ++
 .../common/tegra194-camera-rbpcv3-imx477.dtsi | 529 ++++++++++++++++++
 .../common/tegra194-p3509-0000-a00.dtsi       |   2 +-
 kernel/nvidia/drivers/media/i2c/imx477.c      |  21 +-
 .../drivers/media/i2c/imx477_mode_tbls.h      | 244 ++++++++
 5 files changed, 849 insertions(+), 6 deletions(-)
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-rbpcv3-imx477.dtsi
 create mode 100644 hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-rbpcv3-imx477.dtsi

diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-rbpcv3-imx477.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-rbpcv3-imx477.dtsi
new file mode 100644
index 000000000..9a034f5c9
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-jakku-rbpcv3-imx477.dtsi
@@ -0,0 +1,59 @@
+/*
+ * Copyright (c) 2020, RidgeRun.  All rights reserved.
+ *
+ * Contact us: support@ridgerun.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+
+#include "tegra194-camera-rbpcv3-imx477.dtsi"
+
+#define CAM0_PWDN	TEGRA194_MAIN_GPIO(P, 4)
+#define CAM1_PWDN	TEGRA194_MAIN_GPIO(P, 5)
+#define CAM_I2C_MUX 	TEGRA194_AON_GPIO(CC, 3)
+
+/ {
+	cam_i2cmux{
+		compatible = "i2c-mux-gpio";
+		#address-cells = <1>;
+		#size-cells = <0>;
+		i2c-parent = <&cam_i2c>;
+		mux-gpios = <&tegra_aon_gpio CAM_I2C_MUX GPIO_ACTIVE_HIGH>;
+		i2c@0 {
+			reg = <0>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+            		rbpcv3_imx477_a@1a {
+				reset-gpios = <&tegra_main_gpio CAM0_PWDN GPIO_ACTIVE_HIGH>;
+			};
+		};
+		i2c@1 {
+			reg = <1>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			rbpcv3_imx477_c@1a {
+				reset-gpios = <&tegra_main_gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;
+			};
+		};
+	};
+
+	gpio@2200000 {
+		camera-control-output-low {
+			gpio-hog;
+			output-low;
+			gpios = <CAM0_PWDN 0 CAM1_PWDN 0>;
+			label = "cam0-pwdn","cam1-pwdn";
+		};
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-rbpcv3-imx477.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-rbpcv3-imx477.dtsi
new file mode 100644
index 000000000..f6371d693
--- /dev/null
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-camera-rbpcv3-imx477.dtsi
@@ -0,0 +1,529 @@
+/*
+ * Copyright (c) 2020, RidgeRun.  All rights reserved.
+ *
+ * Contact us: support@ridgerun.com
+ *
+ * This program is free software; you can redistribute it and/or modify
+ * it under the terms of the GNU General Public License as published by
+ * the Free Software Foundation; either version 2 of the License, or
+ * (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful, but WITHOUT
+ * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
+ * FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for
+ * more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program.  If not, see <http://www.gnu.org/licenses/>.
+ */
+#include <dt-bindings/media/camera.h>
+
+/ {
+	host1x {
+		vi@15c10000  {
+			num-channels = <2>;
+			ports {
+				#address-cells = <1>;
+				#size-cells = <0>;
+				vi_port0: port@0 {
+					reg = <0>;
+					rbpcv3_imx477_vi_in0: endpoint {
+						status = "okay";
+						port-index = <0>;
+						bus-width = <2>;
+						remote-endpoint = <&rbpcv3_imx477_csi_out0>;
+					};
+				};
+				vi_port1: port@1 {
+					reg = <1>;
+					rbpcv3_imx477_vi_in1: endpoint {
+						status = "okay";
+						port-index = <2>;
+						bus-width = <2>;
+						remote-endpoint = <&rbpcv3_imx477_csi_out1>;
+					};
+				};
+			};
+		};
+
+		nvcsi@15a00000 {
+			num-channels = <2>;
+			#address-cells = <1>;
+			#size-cells = <0>;
+			csi_chan0: channel@0 {
+				reg = <0>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan0_port0: port@0 {
+						reg = <0>;
+						status = "okay";
+						rbpcv3_imx477_csi_in0: endpoint@0 {
+							port-index = <0>;
+							bus-width = <2>;
+							remote-endpoint = <&rbpcv3_imx477_out0>;
+						};
+					};
+					csi_chan0_port1: port@1 {
+						reg = <1>;
+						status = "okay";
+						rbpcv3_imx477_csi_out0: endpoint@1 {
+							status = "okay";
+							remote-endpoint = <&rbpcv3_imx477_vi_in0>;
+						};
+					};
+				};
+			};
+			csi_chan1: channel@1 {
+				reg = <1>;
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					csi_chan1_port0: port@0 {
+						reg = <0>;
+						rbpcv3_imx477_csi_in1: endpoint@2 {
+							port-index = <2>;
+							bus-width = <2>;
+							status = "okay";
+							remote-endpoint = <&rbpcv3_imx477_out1>;
+						};
+					};
+					csi_chan1_port1: port@1 {
+						reg = <1>;
+						status = "okay";
+						rbpcv3_imx477_csi_out1: endpoint@3 {
+							remote-endpoint = <&rbpcv3_imx477_vi_in1>;
+						};
+					};
+				};
+			};
+		};
+	};
+
+	cam_i2cmux {
+		i2c_0:i2c@0 {
+			imx477_cam0: rbpcv3_imx477_a@1a {
+				compatible = "ridgerun,imx477";
+				/* I2C device address */
+				reg = <0x1a>;
+
+				/* V4L2 device node location */
+				devnode = "video0";
+
+				/* Physical dimensions of sensor */
+				physical_w = "7.564";
+				physical_h = "5.476";
+
+				sensor_model = "imx477";
+
+				use_sensor_mode_id = "true";
+
+				mode0 { /* IMX477_MODE_4032X3040 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "30000000"; /* 30.0 fps */
+					step_framerate = "1";
+					default_framerate = "30000000"; /* 30.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode1 { /* IMX477_MODE_1920X1080 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode2 { /* IMX477_MODE_1920X1440 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1440";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode3 { /* IMX477_MODE_2028X1520 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_a";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						rbpcv3_imx477_out0: endpoint {
+							port-index = <0>;
+							bus-width = <2>;
+							remote-endpoint = <&rbpcv3_imx477_csi_in0>;
+						};
+					};
+				};
+			};
+		};
+		i2c_1: i2c@1 {
+			imx477_cam1: rbpcv3_imx477_c@1a {
+				compatible = "ridgerun,imx477";
+				/* I2C device address */
+				reg = <0x1a>;
+
+				/* V4L2 device node location */
+				devnode = "video1";
+
+				/* Physical dimensions of sensor */
+				physical_w = "7.564";
+				physical_h = "5.476";
+
+				sensor_model = "imx477";
+
+				use_sensor_mode_id = "true";
+
+				mode0 { /* IMX477_MODE_4032X3040 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "4032";
+					active_h = "3040";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "30000000"; /* 30.0 fps */
+					step_framerate = "1";
+					default_framerate = "30000000"; /* 30.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode1 { /* IMX477_MODE_1920X1080 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1080";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "9024";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode2 { /* IMX477_MODE_1920X1440 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "1920";
+					active_h = "1440";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+				mode3 { /* IMX477_MODE_2028X1520 */
+					mclk_khz = "24000";
+					num_lanes = "2";
+					tegra_sinterface = "serial_c";
+					phy_mode = "DPHY";
+					discontinuous_clk = "no";
+					dpcm_enable = "false";
+					cil_settletime = "0";
+
+					active_w = "2028";
+					active_h = "1520";
+					mode_type = "bayer";
+					pixel_phase = "rggb";
+					csi_pixel_bit_depth = "10";
+					readout_orientation = "90";
+					line_length = "6524";
+					inherent_gain = "1";
+					mclk_multiplier = "80";
+					pix_clk_hz = "840000000";
+
+					gain_factor = "16";
+					framerate_factor = "1000000";
+					exposure_factor = "1000000";
+					min_gain_val = "16"; /* 1.00x */
+					max_gain_val = "356"; /* 22x */
+					step_gain_val = "1";
+					default_gain = "16"; /* 1.00x */
+					min_hdr_ratio = "1";
+					max_hdr_ratio = "1";
+					min_framerate = "2000000"; /* 2.0 fps */
+					max_framerate = "60000000"; /* 60.0 fps */
+					step_framerate = "1";
+					default_framerate = "60000000"; /* 60.0 fps */
+					min_exp_time = "13"; /* us */
+					max_exp_time = "683709"; /* us */
+					step_exp_time = "1";
+					default_exp_time = "2495"; /* us */
+
+					embedded_metadata_height = "2";
+				};
+
+				ports {
+					#address-cells = <1>;
+					#size-cells = <0>;
+					port@0 {
+						reg = <0>;
+						rbpcv3_imx477_out1: endpoint {
+							port-index = <2>;
+							bus-width = <2>;
+							remote-endpoint = <&rbpcv3_imx477_csi_in1>;
+						};
+					};
+				};
+			};
+		};
+	};
+};
+/ {
+	tcp: tegra-camera-platform {
+		compatible = "nvidia, tegra-camera-platform";
+		num_csi_lanes = <4>;
+		max_lane_speed = <1500000>;
+		min_bits_per_pixel = <10>;
+		vi_peak_byte_per_pixel = <2>;
+		vi_bw_margin_pct = <25>;
+		max_pixel_rate = <7500000>;
+		isp_peak_byte_per_pixel = <5>;
+		isp_bw_margin_pct = <25>;
+
+		modules {
+			cam_module0: module0 {
+				badge = "jakku_front_RBP194";
+				position = "front";
+				orientation = "1";
+				status = "okay";
+				cam_module0_drivernode0: drivernode0 {
+					status = "okay";
+					pcl_id = "v4l2_sensor";
+					devname = "imx477 9-001a";
+					proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@0/rbpcv3_imx477_a@1a";
+				};
+			};
+			cam_module1: module1 {
+				badge = "jakku_rear_RBP194";
+				position = "rear";
+				orientation = "1";
+				status = "okay";
+				cam_module1_drivernode0: drivernode0 {
+					status = "okay";
+					pcl_id = "v4l2_sensor";
+					devname = "imx477 10-001a";
+					proc-device-tree = "/proc/device-tree/cam_i2cmux/i2c@1/rbpcv3_imx477_c@1a";
+				};
+			};
+		};
+	};
+};
diff --git a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-p3509-0000-a00.dtsi b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-p3509-0000-a00.dtsi
index eda744934..250eab69e 100644
--- a/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-p3509-0000-a00.dtsi
+++ b/hardware/nvidia/platform/t19x/jakku/kernel-dts/common/tegra194-p3509-0000-a00.dtsi
@@ -16,7 +16,7 @@
 #include "tegra194-p3509-disp.dtsi"
 #include "tegra194-audio-p3668.dtsi"
 #include "tegra194-super-module-e2614-p3509.dtsi"
-#include "tegra194-camera-jakku-rbpcv2-imx219.dtsi"
+#include "tegra194-camera-jakku-rbpcv3-imx477.dtsi"
 / {
 	gpio-keys {
 		compatible = "gpio-keys";
diff --git a/kernel/nvidia/drivers/media/i2c/imx477.c b/kernel/nvidia/drivers/media/i2c/imx477.c
index 8f436bb1e..da4f71574 100644
--- a/kernel/nvidia/drivers/media/i2c/imx477.c
+++ b/kernel/nvidia/drivers/media/i2c/imx477.c
@@ -368,9 +368,9 @@ skip_power_seqn:
 			gpio_set_value(pw->reset_gpio, 1);
 	}
 
-	/* Need to wait for t4 + t5 + t9 + t10 time as per the data sheet */
-	/* t4 - 200us, t5 - 21.2ms, t9 - 1.2ms t10 - 270 ms */
-	usleep_range(300000, 300100);
+	/* Need to wait for t4 + t5 + t9 time as per the data sheet */
+	/* t4 - 200us, t5 - 21.2ms, t9 - 1.2ms */
+	usleep_range(23000, 23100);
 
 	pw->state = SWITCH_ON;
 
@@ -637,16 +637,23 @@ static struct camera_common_sensor_ops imx477_common_ops = {
 static int imx477_board_setup(struct imx477 *priv)
 {
 	struct camera_common_data *s_data = priv->s_data;
+	struct camera_common_pdata *pdata = s_data->pdata;
 	struct device *dev = s_data->dev;
 	u8 reg_val[2];
 	int err = 0;
 
-	// Skip mclk enable as this camera has an internal oscillator
+	if (pdata->mclk_name) {
+		err = camera_common_mclk_enable(s_data);
+		if (err) {
+			dev_err(dev, "error turning on mclk (%d)\n", err);
+			goto done;
+		}
+	}
 
 	err = imx477_power_on(s_data);
 	if (err) {
 		dev_err(dev, "error during power on sensor (%d)\n", err);
-		goto done;
+		goto err_power_on;
 	}
 
 	/* Probe sensor model id registers */
@@ -676,6 +683,10 @@ static int imx477_board_setup(struct imx477 *priv)
 err_reg_probe:
 	imx477_power_off(s_data);
 
+err_power_on:
+	if (pdata->mclk_name)
+		camera_common_mclk_disable(s_data);
+
 done:
 	return err;
 }
diff --git a/kernel/nvidia/drivers/media/i2c/imx477_mode_tbls.h b/kernel/nvidia/drivers/media/i2c/imx477_mode_tbls.h
index dd2cfe06f..5e6e65b15 100644
--- a/kernel/nvidia/drivers/media/i2c/imx477_mode_tbls.h
+++ b/kernel/nvidia/drivers/media/i2c/imx477_mode_tbls.h
@@ -593,9 +593,249 @@ static const imx477_reg imx477_mode_1920x1080_60fps[] = {
 	{IMX477_TABLE_END, 0x0000}
 };
 
+static const imx477_reg imx477_mode_1920x1440_60fps[] = {
+	{0x0112, 0x0A},
+	{0x0113, 0x0A},
+	{0x0114, 0x01},
+	{0x0342, 0x19},
+	{0x0343, 0x7C},
+	{0x0340, 0x10},
+	{0x0341, 0xC3},
+	{0x0344, 0x00},
+	{0x0345, 0x00},
+	{0x0346, 0x00},
+	{0x0347, 0x00},
+	{0x0348, 0x0F},
+	{0x0349, 0xD7},
+	{0x034A, 0x0B},
+	{0x034B, 0xDF},
+	{0x00E3, 0x00},
+	{0x00E4, 0x00},
+	{0x00FC, 0x0A},
+	{0x00FD, 0x0A},
+	{0x00FE, 0x0A},
+	{0x00FF, 0x0A},
+	{0x0220, 0x00},
+	{0x0221, 0x11},
+	{0x0381, 0x01},
+	{0x0383, 0x01},
+	{0x0385, 0x01},
+	{0x0387, 0x01},
+	{0x0900, 0x01},
+	{0x0901, 0x22},
+	{0x0902, 0x02},
+	{0x3140, 0x02},
+	{0x3C00, 0x00},
+	{0x3C01, 0x03},
+	{0x3C02, 0xDC},
+	{0x3F0D, 0x00},
+	{0x5748, 0x07},
+	{0x5749, 0xFF},
+	{0x574A, 0x00},
+	{0x574B, 0x00},
+	{0x7B75, 0x0E},
+	{0x7B76, 0x09},
+	{0x7B77, 0x0C},
+	{0x7B78, 0x06},
+	{0x7B79, 0x3B},
+	{0x7B53, 0x01},
+	{0x9369, 0x5A},
+	{0x936B, 0x55},
+	{0x936D, 0x28},
+	{0x9304, 0x03},
+	{0x9305, 0x00},
+	{0x9E9A, 0x2F},
+	{0x9E9B, 0x2F},
+	{0x9E9C, 0x2F},
+	{0x9E9D, 0x00},
+	{0x9E9E, 0x00},
+	{0x9E9F, 0x00},
+	{0xA2A9, 0x60},
+	{0xA2B7, 0x00},
+	{0x0401, 0x00},
+	{0x0404, 0x00},
+	{0x0405, 0x10},
+	{0x0408, 0x00},
+	{0x0409, 0x28},
+	{0x040A, 0x00},
+	{0x040B, 0x36},
+	{0x040C, 0x07},
+	{0x040D, 0x80},
+	{0x040E, 0x05},
+	{0x040F, 0xA0},
+	{0x034C, 0x07},
+	{0x034D, 0x80},
+	{0x034E, 0x05},
+	{0x034F, 0xA0},
+	{0x0301, 0x05},
+	{0x0303, 0x02},
+	{0x0305, 0x02},
+	{0x0306, 0x00},
+	{0x0307, 0xAF},
+	{0x0309, 0x0A},
+	{0x030B, 0x01},
+	{0x030D, 0x02},
+	{0x030E, 0x00},
+	{0x030F, 0x74},
+	{0x0310, 0x01},
+	{0x0820, 0x15},
+	{0x0821, 0xC0},
+	{0x0822, 0x00},
+	{0x0823, 0x00},
+	{0x080A, 0x00},
+	{0x080B, 0x8F},
+	{0x080C, 0x00},
+	{0x080D, 0x5F},
+	{0x080E, 0x00},
+	{0x080F, 0x97},
+	{0x0810, 0x00},
+	{0x0811, 0x6F},
+	{0x0812, 0x00},
+	{0x0813, 0x67},
+	{0x0814, 0x00},
+	{0x0815, 0x57},
+	{0x0816, 0x01},
+	{0x0817, 0x77},
+	{0x0818, 0x00},
+	{0x0819, 0x4F},
+	{0xE04C, 0x00},
+	{0xE04D, 0x97},
+	{0xE04E, 0x00},
+	{0xE04F, 0x1F},
+	{0x3E20, 0x01},
+	{0x3E37, 0x00},
+	{0x3F50, 0x00},
+	{0x3F56, 0x00},
+	{0x3F57, 0xBB},
+	{0X3FF9, 0x01},
+	{IMX477_TABLE_WAIT_MS, IMX477_WAIT_MS},
+	{IMX477_TABLE_END, 0x0000}
+};
+
+static const imx477_reg imx477_mode_2028x1520_60fps[] = {
+	{0x0112, 0x0A},
+	{0x0113, 0x0A},
+	{0x0114, 0x01},
+	{0x0342, 0x19},
+	{0x0343, 0x7C},
+	{0x0340, 0x10},
+	{0x0341, 0xC3},
+	{0x0344, 0x00},
+	{0x0345, 0x00},
+	{0x0346, 0x00},
+	{0x0347, 0x00},
+	{0x0348, 0x0F},
+	{0x0349, 0xD7},
+	{0x034A, 0x0B},
+	{0x034B, 0xDF},
+	{0x00E3, 0x00},
+	{0x00E4, 0x00},
+	{0x00FC, 0x0A},
+	{0x00FD, 0x0A},
+	{0x00FE, 0x0A},
+	{0x00FF, 0x0A},
+	{0x0220, 0x00},
+	{0x0221, 0x11},
+	{0x0381, 0x01},
+	{0x0383, 0x01},
+	{0x0385, 0x01},
+	{0x0387, 0x01},
+	{0x0900, 0x01},
+	{0x0901, 0x22},
+	{0x0902, 0x02},
+	{0x3140, 0x02},
+	{0x3C00, 0x00},
+	{0x3C01, 0x03},
+	{0x3C02, 0xDC},
+	{0x3F0D, 0x00},
+	{0x5748, 0x07},
+	{0x5749, 0xFF},
+	{0x574A, 0x00},
+	{0x574B, 0x00},
+	{0x7B75, 0x0E},
+	{0x7B76, 0x09},
+	{0x7B77, 0x0C},
+	{0x7B78, 0x06},
+	{0x7B79, 0x3B},
+	{0x7B53, 0x01},
+	{0x9369, 0x5A},
+	{0x936B, 0x55},
+	{0x936D, 0x28},
+	{0x9304, 0x03},
+	{0x9305, 0x00},
+	{0x9E9A, 0x2F},
+	{0x9E9B, 0x2F},
+	{0x9E9C, 0x2F},
+	{0x9E9D, 0x00},
+	{0x9E9E, 0x00},
+	{0x9E9F, 0x00},
+	{0xA2A9, 0x60},
+	{0xA2B7, 0x00},
+	{0x0401, 0x00},
+	{0x0404, 0x00},
+	{0x0405, 0x10},
+	{0x0408, 0x00},
+	{0x0409, 0x00},
+	{0x040A, 0x00},
+	{0x040B, 0x00},
+	{0x040C, 0x07},
+	{0x040D, 0xEC},
+	{0x040E, 0x05},
+	{0x040F, 0xF0},
+	{0x034C, 0x07},
+	{0x034D, 0xEC},
+	{0x034E, 0x05},
+	{0x034F, 0xF0},
+	{0x0301, 0x05},
+	{0x0303, 0x02},
+	{0x0305, 0x02},
+	{0x0306, 0x00},
+	{0x0307, 0xAF},
+	{0x0309, 0x0A},
+	{0x030B, 0x01},
+	{0x030D, 0x02},
+	{0x030E, 0x00},
+	{0x030F, 0x74},
+	{0x0310, 0x01},
+	{0x0820, 0x15},
+	{0x0821, 0xC0},
+	{0x0822, 0x00},
+	{0x0823, 0x00},
+	{0x080A, 0x00},
+	{0x080B, 0x8F},
+	{0x080C, 0x00},
+	{0x080D, 0x5F},
+	{0x080E, 0x00},
+	{0x080F, 0x97},
+	{0x0810, 0x00},
+	{0x0811, 0x6F},
+	{0x0812, 0x00},
+	{0x0813, 0x67},
+	{0x0814, 0x00},
+	{0x0815, 0x57},
+	{0x0816, 0x01},
+	{0x0817, 0x77},
+	{0x0818, 0x00},
+	{0x0819, 0x4F},
+	{0xE04C, 0x00},
+	{0xE04D, 0x97},
+	{0xE04E, 0x00},
+	{0xE04F, 0x1F},
+	{0x3E20, 0x01},
+	{0x3E37, 0x00},
+	{0x3F50, 0x00},
+	{0x3F56, 0x00},
+	{0x3F57, 0xBB},
+	{0X3FF9, 0x01},
+	{IMX477_TABLE_WAIT_MS, IMX477_WAIT_MS},
+	{IMX477_TABLE_END, 0x0000}
+};
+
 enum {
 	IMX477_MODE_4032x3040_30FPS,
 	IMX477_MODE_1920x1080_60FPS,
+	IMX477_MODE_1920x1440_60FPS,
+	IMX477_MODE_2028x1520_60FPS,
 	IMX477_MODE_COMMON,
 	IMX477_START_STREAM,
 	IMX477_STOP_STREAM,
@@ -604,6 +844,8 @@ enum {
 static const imx477_reg *mode_table[] = {
 	[IMX477_MODE_4032x3040_30FPS] = imx477_mode_4032x3040_30fps,
 	[IMX477_MODE_1920x1080_60FPS] = imx477_mode_1920x1080_60fps,
+	[IMX477_MODE_1920x1440_60FPS] = imx477_mode_1920x1440_60fps,
+	[IMX477_MODE_2028x1520_60FPS] = imx477_mode_2028x1520_60fps,
 	[IMX477_MODE_COMMON] = imx477_mode_common,
 	[IMX477_START_STREAM] = imx477_start,
 	[IMX477_STOP_STREAM] = imx477_stop,
@@ -620,5 +862,7 @@ static const int imx477_60_fr[] = {
 static const struct camera_common_frmfmt imx477_frmfmt[] = {
 	{{4032, 3040}, imx477_30_fr, 1, 0, IMX477_MODE_4032x3040_30FPS},
 	{{1920, 1080}, imx477_60_fr, 1, 0, IMX477_MODE_1920x1080_60FPS},
+	{{1920, 1440}, imx477_60_fr, 1, 0, IMX477_MODE_1920x1440_60FPS},
+	{{2028, 1520}, imx477_60_fr, 1, 0, IMX477_MODE_2028x1520_60FPS},
 };
 #endif /* __IMX477_I2C_TABLES__ */
-- 
2.17.1

